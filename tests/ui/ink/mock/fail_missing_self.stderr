error[E0038]: the trait `Trait` cannot be made into an object
 --> tests/ui/ink/mock/fail_missing_self.rs:1:1
  |
1 | #[obce::definition]
  | ^^^^^^^^^^^^^^^^^^^ `Trait` cannot be made into an object
  |
note: for a trait to be "object safe" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>
 --> tests/ui/ink/mock/fail_missing_self.rs:3:8
  |
2 | pub trait Trait {
  |           ----- this trait cannot be made into an object...
3 |     fn method();
  |        ^^^^^^ ...because associated function `method` has no `self` parameter
  = note: this error originates in the attribute macro `obce::definition` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider turning `method` into a method by giving it a `&self` argument
  |
1 | #[obce::definition]&self
  |                    +++++
help: alternatively, consider constraining `method` so it does not apply to trait objects
  |
1 | #[obce::definition], Self: Sized
  |                    +++++++++++++

error[E0038]: the trait `Trait` cannot be made into an object
 --> tests/ui/ink/mock/fail_missing_self.rs:1:1
  |
1 | #[obce::definition]
  | ^^^^^^^^^^^^^^^^^^^ `Trait` cannot be made into an object
  |
note: for a trait to be "object safe" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>
 --> tests/ui/ink/mock/fail_missing_self.rs:3:8
  |
2 | pub trait Trait {
  |           ----- this trait cannot be made into an object...
3 |     fn method();
  |        ^^^^^^ ...because associated function `method` has no `self` parameter
  = note: this error originates in the attribute macro `obce::definition` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider turning `method` into a method by giving it a `&self` argument
  |
1 | #[obce::definition]&self
  |                    +++++
help: alternatively, consider constraining `method` so it does not apply to trait objects
  |
1 | #[obce::definition], Self: Sized
  |                    +++++++++++++

error[E0038]: the trait `Trait` cannot be made into an object
 --> tests/ui/ink/mock/fail_missing_self.rs:6:1
  |
6 | #[obce::mock]
  | ^^^^^^^^^^^^^ `Trait` cannot be made into an object
  |
note: for a trait to be "object safe" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>
 --> tests/ui/ink/mock/fail_missing_self.rs:3:8
  |
2 | pub trait Trait {
  |           ----- this trait cannot be made into an object...
3 |     fn method();
  |        ^^^^^^ ...because associated function `method` has no `self` parameter
  = note: this error originates in the attribute macro `obce::mock` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider turning `method` into a method by giving it a `&self` argument
  |
1 | #[obce::definition]&self
  |                    +++++
help: alternatively, consider constraining `method` so it does not apply to trait objects
  |
1 | #[obce::definition], Self: Sized
  |                    +++++++++++++
